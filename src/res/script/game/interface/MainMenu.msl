{
	GUI.MainMenu:
	{
		ShaderDrawer: Drawer.Color.Shader()
		{
			Shader: Shader.Uniform.Timed()
			{
				VertexPath: Shaders/instanced.vertex
				FragmentPath: Shaders/menu/star.fragment

				Name: StarShader

				Defines:
				[
				]

				Debug: true
				Debug.Uniforms:
				[
					GL.Uniform.Float( n:time_m v:1 step:0.01)
				]
			}

			Uniforms:
			[
				GL.Uniform.Int( n:iChannel0 v:1 )
				GL.Uniform.Int( n:iChannel1 v:2 )
				GL.Uniform.Int( n:iChannel2 v:3 )
			]

			Samplers:
			[
				Image.Image( Path: "ShaderData/tex02.jpg", Mipmap: true, Wrap: true )
				Image.Image( Path: "ShaderData/tex09.jpg", Mipmap: true, Wrap: true )
				Image.Image( Path: "ShaderData/tex3.jpg", Mipmap: true, Wrap: true )
			]
		}

		ShaderDrawer2: Drawer.Color.Shader()
		{
			Shader: Shader.Uniform.Timed()
			{
				VertexPath: Shaders/instanced.vertex
				FragmentPath: Shaders/menu/menu.fragment

				Name: BackShader

				Defines:
				[
				]

				Debug: true
				Debug.Uniforms:
				[
					GL.Uniform.Float( n:time_m v:1 step:0.01)
				]
			}
		}

		Image.BG: { Class: Image.Image, Path: menu/bg.png	}

		Drawer: Drawer.Composite.Layouter()
		[
			Drawer.Image() { Image: &<MainMenu>.Image.BG }
		]


		Layouter: Layouter.Drawer(
			Drawer: &<MainMenu>.Drawer
			Drawers: [ [&GUI.Button.Drawer [Button.Game Button.Credits Button.Exit]] ]
			)
		[
			Table( y2:-100 )
			[
				Layout( n:Button.Game p:1 )
				Layout( n:Button.Credits p:2 )
				Layout( n:Button.Exit p:3 )
			]
		]



	}

}
